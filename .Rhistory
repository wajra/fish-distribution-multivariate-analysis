sp_haul_data %>% filter(!is.na(year))
sp_not_null <- sp_haul_data %>% filter(!is.na(year))
?write.csv
# In this file, we'll read the data in and filter it
# The data is in the 'data/' folder
# Written for R version 3.6.1
library(dplyr)
# Load the data
# This is the dataset named 'hauls'
# It has all the information for individual hauls
# in surveys
load('data/master_hauls_March7_2017.RData')
# This is the dataset names 'dat'
# It has all the information for individual species
# per haul
load('data/dat_selectedspp_Feb_1_2017.Rdata')
# Species of interest
# Black sea bass â€“ Centropristis striata
# Summer flounder - Paralichthys dentatus
# Tautog - Tautoga onitis
# Scup (Porgy) - Stenotomus chrysops
# All species names in the 'dat' file are appended
# with a regional marker
# Example - centropristis striata_Atl
# Because it's from the Atlantic Ocean
# Filtering out only the needed species
# Species that we are interested in
rec_species <- c('centropristis striata_Atl',
'paralichthys dentatus_Atl',
'tautoga onitis_Atl',
'stenotomus chrysops_Atl')
# Filtering the 'dat' dataframe
# sp_data <- dat[dat$sppocean %in% rec_species, ]
sp_data <- dat %>% filter(sppocean %in% rec_species)
# Now let's group the 'sp_data' dataframe and see how many
# observations we have for each species
grouped_sp_data <- sp_data %>% group_by(sppocean)
# Now let's summarize some of the data
print(sp_data %>% count(sppocean))
# Remaining to do
# Merge 'hauls' and 'sp_data'
# Identify the continuous variables
# Conduct preliminary LDA on the data
dat <- dat[!(dat$wtcpue == 0 & dat$region == 'DFO_SoGulf'),]
dat$wtcpue[dat$wtcpue == 0] <- 0.0002
sp_data$logwtcpue <- log(sp_data$wtcpue)
sp_data <- sp_data %>% select(haulid, sppocean, Freq, wtcpue, logwtcpue)
# Now we'll merge it with hauls
# We'll use inner join
sp_haul_data <- left_join(sp_data, hauls, by='haulid')
sp_not_null <- sp_haul_data %>% filter(!is.na(year))
sapply(sp_not_null, function(x) sum(is.na(x)))
write.csv(sp_not_null, file="data/data_for_lda.csv")
rm(list=ls())
# In this file we'll perform an exploratory LDA on the output
# from 'p_1_overview.R'
# Written for R Version 3.6.1
library(tidyverse)
library(MASS)
# Read in the data
sp_obs_data <- read.csv("data/data_for_lda.csv")
# Re-check to see if the data is structured as required
# How many unique species are in the dataset?
print(unique(sp_obs_data$sppocean))
# In this file we'll perform an exploratory LDA on the output
# from 'p_1_overview.R'
# Written for R Version 3.6.1
library(tidyverse)
library(MASS)
# Read in the data
sp_obs_data <- read.csv("data/data_for_lda.csv")
# Re-check to see if the data is structured as required
# How many unique species are in the dataset?
print(unique(sp_obs_data$sppocean)[1])
names(sp_obs_data)
unique(yearsurv)
unique(sp_obs_data$yearsurv)
unique(sp_obs_data$region)
unique(sp_obs_data$survey)
unique(sp_obs_data$surveyfact)
unique(sp_obs_data$month)
names(sp_obs_data)
# In this file we'll perform an exploratory LDA on the output
# from 'p_1_overview.R'
# Written for R Version 3.6.1
library(tidyverse)
library(MASS)
# Read in the data
sp_obs_data <- read.csv("data/data_for_lda.csv")
# Re-check to see if the data is structured as required
# How many unique species are in the dataset?
print(unique(sp_obs_data$sppocean))
# The answer is 3
# First let's do an overall LDA on the dataset
# This will probably mean meaningless. But let's see
lda_formula <- formula(sppocean ~ SBT.seasonal + SST.seasonal.mean + SBT.min + SBT.max + SST.max + rugosity + GRAINSIZE)
sp_lda <- lda(lda_formula, data = sp_obs_data)
# SBT.seasonal) + s(SST.seasonal.mean) + s(SBT.min) + s(SBT.max) + s(SST.max) + s(rugosity) + s(GRAINSIZE)
# So now the fun begins
# Since the data is structured for 2 seasons, we have to analysis for
# them separately
sp_lda
# In this file we'll perform an exploratory LDA on the output
# from 'p_1_overview.R'
# Written for R Version 3.6.1
library(tidyverse)
library(MASS)
# Read in the data
sp_obs_data <- read.csv("data/data_for_lda.csv")
# Re-check to see if the data is structured as required
# How many unique species are in the dataset?
print(unique(sp_obs_data$sppocean))
# The answer is 3
# First let's do an overall LDA on the dataset
# This will probably mean meaningless. But let's see
lda_formula <- formula(sppocean ~ SBT.seasonal + SST.seasonal.mean + SBT.min + SBT.max + SST.max + rugosity + GRAINSIZE)
sp_lda <- lda(lda_formula, data = sp_obs_data)
# Now let's plot them and see
# We have to get the discriminant values into a dataframe for this
lda_df <- data.frame(sp_lda$x[,1], sp_lda$x[,2], sp_obs_data$sppocean)
# Rename the columns
columns <- c("LD1", "LD2", "species")
colnames(lda_df) <- columns
# The actual plotting
ggplot(lda_df, aes(x=LD1, y=LD2)) +
geom_point(color = factor(species))
# So now the fun begins
# Since the data is structured for 2 seasons, we have to analysis for
# them separately
sp_lda
# In this file we'll perform an exploratory LDA on the output
# from 'p_1_overview.R'
# Written for R Version 3.6.1
library(tidyverse)
library(MASS)
# Read in the data
sp_obs_data <- read.csv("data/data_for_lda.csv")
# Re-check to see if the data is structured as required
# How many unique species are in the dataset?
print(unique(sp_obs_data$sppocean))
# The answer is 3
# First let's do an overall LDA on the dataset
# This will probably mean meaningless. But let's see
lda_formula <- formula(sppocean ~ SBT.seasonal + SST.seasonal.mean + SBT.min + SBT.max + SST.max + rugosity + GRAINSIZE)
sp_lda <- lda(lda_formula, data = sp_obs_data)
lda_values <- predict(sp_lda)
# Now let's plot them and see
# We have to get the discriminant values into a dataframe for this
lda_df <- data.frame(lda_values$x[,1], lda_values$x[,2], sp_obs_data$sppocean)
# Rename the columns
columns <- c("LD1", "LD2", "species")
colnames(lda_df) <- columns
# The actual plotting
ggplot(lda_df, aes(x=LD1, y=LD2)) +
geom_point(color = factor(species))
# So now the fun begins
# Since the data is structured for 2 seasons, we have to analysis for
# them separately
lda_df
# In this file we'll perform an exploratory LDA on the output
# from 'p_1_overview.R'
# Written for R Version 3.6.1
library(tidyverse)
library(MASS)
# Read in the data
sp_obs_data <- read.csv("data/data_for_lda.csv")
# Re-check to see if the data is structured as required
# How many unique species are in the dataset?
print(unique(sp_obs_data$sppocean))
# The answer is 3
# First let's do an overall LDA on the dataset
# This will probably mean meaningless. But let's see
lda_formula <- formula(sppocean ~ SBT.seasonal + SST.seasonal.mean + SBT.min + SBT.max + SST.max + rugosity + GRAINSIZE)
sp_lda <- lda(lda_formula, data = sp_obs_data)
lda_values <- predict(sp_lda)
# Now let's plot them and see
# We have to get the discriminant values into a dataframe for this
lda_df <- data.frame(lda_values$x[,1], lda_values$x[,2], sp_obs_data$sppocean)
# Rename the columns
columns <- c("LD1", "LD2", "species")
colnames(lda_df) <- columns
# The actual plotting
ggplot(lda_df, aes(x=LD1, y=LD2)) +
geom_point(aes(color = factor(species)))
# So now the fun begins
# Since the data is structured for 2 seasons, we have to analysis for
# them separately
# The actual plotting
ggplot(lda_df, aes(x=LD1, y=1)) +
geom_point(aes(color = factor(species)))
# So now the fun begins
# Since the data is structured for 2 seasons, we have to analysis for
# them separately
unique(sp_obs_data$surveyfact)
function assign_month(x){
if x in c(3,4,5) return "Spring"
if x in c(6,7,8) return "Summer"
if x in c(9,10,11) return "Fall"
}
function assign_month(x){
if (x in c(3,4,5)) return "Spring"
}
function_1 <- function assign_month(x){
if (x in c(3,4,5)) return "Spring"
}
function_1 <- function assign_month(x){
return "Spring"
}
function_1 <- function assign_month(x){
return "Spring"
}
function_1 <- function assign_month(){
return "Spring"
}
function_1 <- function assign_month(){
return ("Spring")
}
function_1 <- function assign_month(x){
return ("Spring")
}
function assign_month(x){
return ("Spring")
}
fahrenheit_to_celsius <- function(temp_F) {
temp_C <- (temp_F - 32) * 5 / 9
return(temp_C)
}
function_1 <- function what_season(why_why) {
temp_C <- (temp_F - 32) * 5 / 9
return(temp_C)
}
function_1 <- function what_season(x) {
if (x in c(2,3,4)) return ("Spring")
}
function_1 <- function what_season(x) {
if (x == 2) return ("Spring")
}
fahrenheit_to_celsius <- function(temp_F) {
temp_C <- (temp_F - 32) * 5 / 9
return(temp_C)
}
fahrenheit_to_celsius <- function(x) {
temp_C <- (x - 32) * 5 / 9
return(temp_C)
}
fahrenheit_to_celsius <- function(x) {
temp_C <- (x - 32) * 5 / 9
if (x==2){
return("Spring")
}
}
farenheit_to_celsius(2)
fahrenheit_to_celsius <- function(x) {
temp_C <- (x - 32) * 5 / 9
if (x==2){
return("Spring")
}
}
fahrenheit_to_celsius(2)
fahrenheit_to_celsius <- function(x) {
temp_C <- (x - 32) * 5 / 9
if (x in c(2,3,4)){
return("Spring")
}
}
fahrenheit_to_celsius <- function(x) {
temp_C <- (x - 32) * 5 / 9
if (x %in% c(2,3,4)){
return("Spring")
}
}
fahrenheit_to_celsius(4)
?%in%
?in
names(sp_obs_data)
unique(sp_obs_data$month)
unique(sp_obs_data$survey)
sp_obs_data %>% filter(month==12)
sp_obs_data %>% filter(month==12) %>% summary()
dim(sp_obs_data %>% filter(month==12))
sp_obs_data$season <- sapply(sp_obs_data$month, get_season)
sp_obs_data$season <- sapply(sp_obs_data$month, get_season())
# We have 3 seasons
get_season <- function(x){
if (x %in% c(3,4,5)){
return ("Spring")
}
else if (x %in% c(6,7,8)){
return ("Summer")
}
else if (x %in% c(9,10,11,12))
return ("Fall")
}
sp_obs_data$season <- sapply(sp_obs_data$month, get_season)
sp_obs_data$season
# In this file we'll perform an exploratory LDA on the output
# from 'p_1_overview.R'
# Written for R Version 3.6.1
library(tidyverse)
library(MASS)
# Read in the data
sp_obs_data <- read.csv("data/data_for_lda.csv")
# Re-check to see if the data is structured as required
# How many unique species are in the dataset?
print(unique(sp_obs_data$sppocean))
# The answer is 3
# First let's do an overall LDA on the dataset
# This will probably mean meaningless. But let's see
lda_formula <- formula(sppocean ~ SBT.seasonal + SST.seasonal.mean + SBT.min + SBT.max + SST.max + rugosity + GRAINSIZE)
sp_lda <- lda(lda_formula, data = sp_obs_data)
lda_values <- predict(sp_lda)
# Now let's plot them and see
# We have to get the discriminant values into a dataframe for this
lda_df <- data.frame(lda_values$x[,1], lda_values$x[,2], sp_obs_data$sppocean)
# Rename the columns
columns <- c("LD1", "LD2", "species")
colnames(lda_df) <- columns
# The actual plotting
ggplot(lda_df, aes(x=LD1, y=LD2)) +
geom_point(aes(color = factor(species)))
# As you can see, when we consider all the seasons we cannot really
# discriminate between the species
# So let's start splitting up the data by season
# We have 3 seasons
get_season <- function(x){
if (x %in% c(3,4,5)){
return ("Spring")
}
else if (x %in% c(6,7,8)){
return ("Summer")
}
else if (x %in% c(9,10,11,12))
return ("Fall")
}
sp_obs_data$season <- apply(sp_obs_data$month, get_season)
?tapply
?apply
?lapply
sp_obs_data$season <- lapply(sp_obs_data$month, get_season)
sp_obs_data$season
# In this file we'll perform an exploratory LDA on the output
# from 'p_1_overview.R'
# Written for R Version 3.6.1
library(tidyverse)
library(MASS)
# Read in the data
sp_obs_data <- read.csv("data/data_for_lda.csv")
# Re-check to see if the data is structured as required
# How many unique species are in the dataset?
print(unique(sp_obs_data$sppocean))
# The answer is 3
# First let's do an overall LDA on the dataset
# This will probably mean meaningless. But let's see
lda_formula <- formula(sppocean ~ SBT.seasonal + SST.seasonal.mean + SBT.min + SBT.max + SST.max + rugosity + GRAINSIZE)
sp_lda <- lda(lda_formula, data = sp_obs_data)
lda_values <- predict(sp_lda)
# Now let's plot them and see
# We have to get the discriminant values into a dataframe for this
lda_df <- data.frame(lda_values$x[,1], lda_values$x[,2], sp_obs_data$sppocean)
# Rename the columns
columns <- c("LD1", "LD2", "species")
colnames(lda_df) <- columns
# The actual plotting
ggplot(lda_df, aes(x=LD1, y=LD2)) +
geom_point(aes(color = factor(species)))
# As you can see, when we consider all the seasons we cannot really
# discriminate between the species
# So let's start splitting up the data by season
# We have 3 seasons
get_season <- function(x){
if (x %in% c(3,4,5)){
return ("Spring")
}
else if (x %in% c(6,7,8)){
return ("Summer")
}
else if (x %in% c(9,10,11,12))
return ("Fall")
}
sp_obs_data$season <- apply(sp_obs_data$month, 1, get_season)
# In this file we'll perform an exploratory LDA on the output
# from 'p_1_overview.R'
# Written for R Version 3.6.1
library(tidyverse)
library(MASS)
# Read in the data
sp_obs_data <- read.csv("data/data_for_lda.csv")
# Re-check to see if the data is structured as required
# How many unique species are in the dataset?
print(unique(sp_obs_data$sppocean))
# The answer is 3
# First let's do an overall LDA on the dataset
# This will probably mean meaningless. But let's see
lda_formula <- formula(sppocean ~ SBT.seasonal + SST.seasonal.mean + SBT.min + SBT.max + SST.max + rugosity + GRAINSIZE)
sp_lda <- lda(lda_formula, data = sp_obs_data)
lda_values <- predict(sp_lda)
# Now let's plot them and see
# We have to get the discriminant values into a dataframe for this
lda_df <- data.frame(lda_values$x[,1], lda_values$x[,2], sp_obs_data$sppocean)
# Rename the columns
columns <- c("LD1", "LD2", "species")
colnames(lda_df) <- columns
# The actual plotting
ggplot(lda_df, aes(x=LD1, y=LD2)) +
geom_point(aes(color = factor(species)))
# As you can see, when we consider all the seasons we cannot really
# discriminate between the species
# So let's start splitting up the data by season
# We have 3 seasons
get_season <- function(x){
if (x %in% c(3,4,5)){
return ("Spring")
}
else if (x %in% c(6,7,8)){
return ("Summer")
}
else if (x %in% c(9,10,11,12))
return ("Fall")
}
sp_obs_data$season <- purrr::map_chr(sp_obs_data$month, get_season)
sp_obs_data$season <- purrr::map(sp_obs_data$month, get_season)
sp_obs_season %>% filter(season=='Fall')
sp_obs_data %>% filter(season=='Fall')
sp_obs_data$season
sp_obs_season %>% group_by(season) %>% summary()
sp_obs_data %>% group_by(season) %>% summary()
# The actual plotting
ggplot(lda_df, aes(x=LD1, y=LD2)) +
geom_point(aes(color = factor(species)))
# As you can see, when we consider all the seasons we cannot really
# discriminate between the species
# So let's start splitting up the data by season
# We have 3 seasons
get_season <- function(x){
if (x %in% c(3,4,5)){
return ('Spring')
}
else if (x %in% c(6,7,8)){
return ('Summer')
}
else if (x %in% c(9,10,11,12))
return ('Fall')
}
sp_obs_data$season <- purrr::map(sp_obs_data$month, get_season)
sp_obs_data %>% group_by(season)
# The actual plotting
ggplot(lda_df, aes(x=LD1, y=LD2)) +
geom_point(aes(color = factor(species)))
# As you can see, when we consider all the seasons we cannot really
# discriminate between the species
# So let's start splitting up the data by season
# We have 3 seasons
get_season <- function(x){
if (x %in% c(3,4,5)){
return ('Spring')
}
else if (x %in% c(6,7,8)){
return ('Summer')
}
else if (x %in% c(9,10,11,12))
return ('Fall')
}
sp_obs_data$season <- c(purrr::map(sp_obs_data$month, get_season))
sp_obs_data$season
sp_obs_data %>% group_by(season)
season_list <- purrr::map(sp_obs_data$month, get_season)
# In this file we'll perform an exploratory LDA on the output
# from 'p_1_overview.R'
# Written for R Version 3.6.1
library(tidyverse)
library(MASS)
# Read in the data
sp_obs_data <- read.csv("data/data_for_lda.csv")
# Re-check to see if the data is structured as required
# How many unique species are in the dataset?
print(unique(sp_obs_data$sppocean))
# The answer is 3
# First let's do an overall LDA on the dataset
# This will probably mean meaningless. But let's see
lda_formula <- formula(sppocean ~ SBT.seasonal + SST.seasonal.mean + SBT.min + SBT.max + SST.max + rugosity + GRAINSIZE)
sp_lda <- lda(lda_formula, data = sp_obs_data)
lda_values <- predict(sp_lda)
# Now let's plot them and see
# We have to get the discriminant values into a dataframe for this
lda_df <- data.frame(lda_values$x[,1], lda_values$x[,2], sp_obs_data$sppocean)
# Rename the columns
columns <- c("LD1", "LD2", "species")
colnames(lda_df) <- columns
# The actual plotting
ggplot(lda_df, aes(x=LD1, y=LD2)) +
geom_point(aes(color = factor(species)))
# As you can see, when we consider all the seasons we cannot really
# discriminate between the species
# So let's start splitting up the data by season
# We have 3 seasons
get_season <- function(x){
if (x %in% c(3,4,5)){
return ('Spring')
}
else if (x %in% c(6,7,8)){
return ('Summer')
}
else if (x %in% c(9,10,11,12))
return ('Fall')
}
sp_obs_data %>% mutate(season = get_season(month))
# season_list <- purrr::map(sp_obs_data$month, get_season)
sp_obs_data <- sp_obs_data %>% mutate(season = get_season(month))
unique(sp_obs_data$season)
# season_list <- purrr::map(sp_obs_data$month, get_season)
sp_obs_data <- sp_obs_data %>% mutate(season = get_season())
sp_obs_data <- sp_obs_data %>% mutate(season = get_season(sp_obs_data$month))
